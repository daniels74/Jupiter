@use 'sass:map';
@use '@angular/material' as mat;

/* background-image: url('https://s7d2.scene7.com/is/image/TWCNews/nyc_lightning_strike1280x720esbgettyimages-629353120png'); */
.landing-page {
    position: absolute;
    // background-color: rgb(32, 32, 67);
    // color: white;
    height: 90vh;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    overflow: hidden;
}

.cover-img-small {
    position: absolute;
    height:100%;
    width: auto;
    background-size:cover;
    background-position: center center;
    opacity: 0.75;
}

.cover-img-large {
    position: absolute;
    height:100%;
    width: 100%;
    background-size: auto;
    opacity: 0.75;
}

.title-container {
    /* height: 35%;
    width: 50%; */
    position: relative;
    // background-color: rgba(3, 5, 30, 0.8);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    border-radius: 1rem;
    font-family: Copperplate;
}

.title-container > h1 {
    font-size: 4rem;
}

.title-container > h2 {
    font-size: 3rem;
}

.carousel-container {
    position: relative;
    z-index: 1;
    min-height: 30%;
    height: auto;
    // width: 100vw;
    // background-color:  rgba(0, 140, 255, 0.2);
    /* background-color: rgba(57, 57, 96, 0.5); */
    // background-color: rgba(3, 5, 30, 0.8);
    // display: flex;
    // flex-direction: row;
    // align-items: center;
    // justify-content: center;
    
}

.crpyoinfo-container {
    /* height: 35%;
    width: 75%; */
    position: relative;
    // background-color: rgba(3, 5, 30, 0.8);
    display: flex;
    flex-direction: column;
    align-items: space-around;
    justify-content: space-around;
    border-radius: 1rem;
    font-family: Papyrus;
    box-sizing: border-box;
    padding: 2rem;
    overflow-y: auto;
    gap: 2rem;
}

.crpyoinfo-container > p {
    font-size: larger;
}

@mixin color($theme) {
    .container-color {
      // background-color: rgb(126, 159, 225);
      background-color: mat.get-theme-color($theme, primary);
      color: mat.get-theme-color($theme, primary, text);
    }
    .background-theme-color {
        background-color: mat.get-theme-color($theme, primary, darker);
    }
  }
  
  @mixin theme($theme) {
    @if mat.theme-has($theme, color) {
      @include color($theme);
    }
  }